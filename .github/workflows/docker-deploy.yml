name: Docker deploy images to ACR

on:
  #push:
  workflow_dispatch:

env:
  # Getting secrets from GitHub Secrets
  ACTIONS_RUNNER_DEBUG: true
  AZURE_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  AZURE_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  AZURE_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

  # Setting environment variables
  ACA_ENVIRONMENT: "${{vars.ACA_ENVIRONMENT}}"
  ACA_JOB_NAME: "${{vars.ACA_JOB_NAME}}"
  ACA_RESOURCE_GROUP: "${{vars.ACA_RESOURCE_GROUP}}"
  CONTAINER_IMAGE_NAME: "${{vars.CONTAINER_IMAGE_NAME}}"
  CONTAINER_REGISTRY_NAME: "${{vars.CONTAINER_REGISTRY_NAME}}"
  CONTAINER_REGISTRY_USERNAME: "${{secrets.CONTAINER_REGISTRY_USERNAME}}"
  CONTAINER_REGISTRY_PASSWORD: "${{secrets.CONTAINER_REGISTRY_PASSWORD}}"
permissions:
  id-token: write
  contents: read

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          client-id: ${{ env.AZURE_CLIENT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io
          username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ env.CONTAINER_REGISTRY_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          push: true
          file: "docker/Dockerfile.python.github"
          tags: ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.CONTAINER_IMAGE_NAME }}
